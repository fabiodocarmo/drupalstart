---
stages:
- name: SelfAssembly
  inputs:
  - type: git
    branch: master
  triggers:
  - type: commit
  jobs:
  - name: WrapPresent
    type: builder
    artifact_dir: ./
    build_type: shell
    script: |-
      #!/bin/bash
      # Â© Copyright IBM Corporation 2015.
      #
      # All rights reserved. This program and the accompanying materials
      # are made available under the terms of the Eclipse Public License v1.0
      # which accompanies this distribution, and is available at
      # http://www.eclipse.org/legal/epl-v10.html
      # Derived from dW article @ https://developer.ibm.com/bluemix/2014/02/17/deploy-drupal-application-ibm-bluemix/
      ##########
      # Colors - Lets have some fun ##
      ##########
      Green='\e[0;32m'
      Red='\e[0;31m'
      Yellow='\e[0;33m'
      Cyan='\e[0;36m'
      no_color='\e[0m' # No Color
      beer='\xF0\x9f\x8d\xba'
      delivery='\xF0\x9F\x9A\x9A'
      beers='\xF0\x9F\x8D\xBB'
      eyes='\xF0\x9F\x91\x80'
      cloud='\xE2\x98\x81'
      litter='\xF0\x9F\x9A\xAE'
      fail='\xE2\x9B\x94'
      harpoons='\xE2\x87\x8C'
      tools='\xE2\x9A\x92'
      present='\xF0\x9F\x8E\x81'
      #############
      echo ""
      echo -e "${cloud}${Cyan}  Let's setup Drupal for initial deployment${no_color}"
      echo -e "${tools}${Yellow}    Updating apt-get ...${no_color}"
      sudo apt-get update > /dev/null 2>&1
      # Install jq
      echo -e "${tools}${Yellow}    Installing jq for JSON parsing support...${no_color}"
      sudo apt-get --assume-yes install jq > /dev/null 2>&1
      echo -e "${tools}${Yellow}    Installing zip/unzip...${no_color}"
      sudo apt-get --assume-yes install zip unzip > /dev/null 2>&1
      
      # Let's pull the open source code for Twilio-php SDK
      echo -e "${harpoons}${Yellow}    Updating git submodules ...${no_color}"
      git submodule update --init --recursive > /dev/null 2>&1
      
      echo -e "${harpoons}${Yellow}    Fetching Drupal Zip ...${no_color}"
      mkdir htdocs
      wget http://ftp.drupal.org/files/projects/drupal-7.41.zip -nv -O ./bluezone/drupal.zip
      echo -e "${tools}${Yellow}    Extracting Drupal${no_color}"
      unzip -o ./bluezone/drupal.zip -d ./htdocs > /dev/null 2>&1
      
      echo -e "${tools}${Cyan}    Setting up default site folders ...${no_color}"
      mv ./bluezone/configtweaks/files ./htdocs/drupal-7.41/sites/default
      
      echo -e "${tools}${Yellow}    Setting up best practice modules, libraries, themes  ...${no_color}"
      # In many cases, these are updated modules to help to create a snappy responsive deploy
      # Pre-emptive measure to simply download and install them during setup
      rooturl=http://ftp.drupal.org/files/projects/
      # Admin and Development
      desiredModule[0]=devel-7.x-1.5.zip
      desiredModule[1]=httprl-7.x-1.14.zip
      desiredModule[2]=views-7.x-3.13.zip
      desiredModule[3]=ctools-7.x-1.9.zip
      desiredModule[4]=advanced_help-7.x-1.3.zip
      desiredModule[5]=module_filter-7.x-2.0.zip
      desiredModule[6]=pathauto-7.x-1.3.zip
      desiredModule[7]=webform-7.x-4.12.zip
      desiredModule[8]=redirect-7.x-1.0-rc3.zip
      desiredModule[9]=metatag-7.x-1.7.zip
      desiredModule[10]=jquery_update-7.x-2.7.zip
      desiredModule[11]=token-7.x-1.6.zip
      # Performance
      desiredModule[12]=expire-7.x-2.0-rc4.zip
      desiredModule[13]=entitycache-7.x-1.5.zip
      desiredModule[14]=shadow-7.x-1.0-beta3.zip
      desiredModule[15]=advagg-7.x-2.17.zip
      # Caching
      desiredModule[16]=redis-7.x-3.11.zip
      desiredModule[17]=varnish-7.x-1.0-beta3.zip
      # SPAM Control
      desiredModule[18]=cloudflare-7.x-1.0-beta4.zip
      # SMTP Support
      desiredModule[19]=smtp-7.x-1.3.zip
      # Improved Security
      desiredModule[20]=security_review-7.x-1.2.zip
      desiredModule[21]=r4032login-7.x-1.8.zip
      desiredModule[22]=missing_module-7.x-1.0.zip
      desiredModule[23]=login_security-7.x-1.9.zip
      desiredModule[24]=flood_control-7.x-1.0.zip
      desiredModule[25]=seckit-7.x-1.9.zip
      desiredModule[26]=autologout-7.x-4.4.zip
      # Twilio SMS Support
      desiredModule[27]=libraries-7.x-2.2.zip
      desiredModule[28]=twilio-7.x-1.11.zip
      # Piwik Support
      desiredModule[29]=piwik-7.x-2.7.zip
      # Default Picture Upload
      desiredModule[30]=upload_default_avatar-7.x-1.1.zip
      desiredModule[31]=insert-7.x-1.3.zip
      # Minify HTML - Google PageSpeed Optimization
      desiredModule[32]=minify-7.x-1.3.zip
      # Optimize Images - Google PageSpeed Optimization
      desiredModule[33]=imageapi_optimize-7.x-1.2.zip
      
      echo -e "${tools}${Cyan}      Installing Predis Redis Client Library ...${no_color}"
      wget https://github.com/nrk/predis/archive/v1.0.3.zip -nv -O ./bluezone/predis.zip
      unzip -o ./bluezone/predis.zip -d ./htdocs/drupal-7.41/sites/all/libraries > /dev/null 2>&1
      
      echo -e "${tools}${Cyan}      Installing Twilio PHP Library ...${no_color}"
      wget https://github.com/twilio/twilio-php/archive/master.zip -nv -O ./bluezone/twilio.zip
      unzip -o ./bluezone/twilio.zip -d ./htdocs/drupal-7.41/sites/all/libraries > /dev/null 2>&1
      mv ./htdocs/drupal-7.41/sites/all/libraries/twilio-php-master ./htdocs/drupal-7.41/sites/all/libraries/twilio
      
      echo -e "${tools}${Cyan}      Installing CorporateClean Theme ...${no_color}"
      wget http://ftp.drupal.org/files/projects/corporateclean-7.x-2.3.zip -nv -O ./bluezone/corpclean.zip
      unzip -o ./bluezone/corpclean.zip -d ./htdocs/drupal-7.41/sites/all/themes > /dev/null 2>&1
      
      echo -e "${tools}${Cyan}      Installing Zen Theme ...${no_color}"
      wget http://ftp.drupal.org/files/projects/zen-7.x-5.6.zip -nv -O ./bluezone/zen.zip
      unzip -o ./bluezone/zen.zip -d ./htdocs/drupal-7.41/sites/all/themes > /dev/null 2>&1
      
      for (( i = 0 ; i < ${#desiredModule[@]} ; i++ )); do 
        echo -e "${tools}${Cyan}      Installing ${desiredModule[$i]} Module ...${no_color}"
        wget $rooturl/${desiredModule[$i]} -nv -O ./bluezone/${desiredModule[$i]}
        unzip -o ./bluezone/${desiredModule[$i]} -d ./htdocs/drupal-7.41/sites/all/modules/contrib > /dev/null 2>&1
      done 
      unset desiredModule 
      unset rooturl
      
      echo -e "${tools}${Red}      Patching Image API Module to address the fact that Smush.it service is no longer available ...${no_color}"
      echo -e "${tools}${Yellow}      Reference: https://www.drupal.org/node/2458453 ${no_color}"
      wget https://www.drupal.org/files/issues/imageapi_optimize-add-resmushit-service-2458453-25.patch -nv -O ./imageapi_optimize-add-resmushit-service-2458453-25.patch
      patch -p1 -d ./htdocs/drupal-7.41/sites/all/modules/contrib/imageapi_optimize < ./imageapi_optimize-add-resmushit-service-2458453-25.patch
      
      echo -e "${tools}${Red}      Patching Varnish Module to fix theme_hook_original on port bug ...${no_color}"
      echo -e "${tools}${Yellow}      Reference: https://www.drupal.org/node/2371907#comment-9468011 ${no_color}"
      wget https://www.drupal.org/files/issues/varnish-2371907-24.patch -nv -O ./varnish-2371907-24.patch
      patch -d ./htdocs/drupal-7.41/sites/all/modules/contrib/varnish < ./varnish-2371907-24.patch
      rm varnish-2371907-24.patch
      
      echo -e "${tools}${Cyan}    Setting up user provided libraries ...${no_color}"
      for f in ./bluezone/configtweaks/libraries/*; do
          if [ -d ${f} ]; then
              # Will not run if no directories are available
              echo -e "${harpoons}${Cyan}      Installing ${f} User-Provided libraries ...${no_color}"
              mv $f ./htdocs/drupal-7.41/sites/all/libraries
          else
              echo -e "${fail}${Cyan}      No User-Provided libraries detected...${no_color}"
          fi
      done
      
      for f in ./bluezone/configtweaks/modules/contrib/*; do
          if [ -d ${f} ]; then
              # Will not run if no directories are available
              echo -e "${harpoons}${Cyan}      Installing ${f} User-Provided Contrib Modules ...${no_color}"
              mv $f ./htdocs/drupal-7.41/sites/all/modules/contrib
          else
              echo -e "${fail}${Cyan}      No User-Provided Contrib Modules detected...${no_color}"
          fi
      done
      
      for f in ./bluezone/configtweaks/modules/custom/*; do
          if [ -d ${f} ]; then
              # Will not run if no directories are available
              echo -e "${harpoons}${Cyan}      Installing ${f} User-Provided Custom Modules ...${no_color}"
              mv $f ./htdocs/drupal-7.41/sites/all/modules/custom
          else
              echo -e "${fail}${Cyan}      No User-Provided Custom Modules detected...${no_color}"
          fi
      done
      
      for f in ./bluezone/configtweaks/themes/*; do
          if [ -d ${f} ]; then
              # Will not run if no directories are available
              echo -e "${harpoons}${Cyan}      Installing ${f} User-Provided Themes ...${no_color}"
              mv $f ./htdocs/drupal-7.41/sites/all/themes
          else
              echo -e "${fail}${Cyan}      No User-Provided Themes detected...${no_color}"
          fi
      done
      
      # Organize the artifact structure to be CF PHP Buildpack friendly
      echo -e "${cloud}${Yellow}    Making artifacts CF PHP friendly ...${no_color}"
      mv ./bluezone/configtweaks/.profile.d .
      mv ./bluezone/configtweaks/.bp-config .
      mkdir .extensions
      mv ./bluezone/configtweaks/.php-extensions .
      # Organize the artifact structure to facilitate BMX deploy
      echo -e "${cloud}${Yellow}    Making drupal artifacts ${Cyan}Bluemix ${Yellow}friendly ...${no_color}"
      mv ./bluezone/configtweaks/.user.ini ./htdocs/drupal-7.41
      
      echo -e "${cloud}${Yellow}    Hardening drupal .htaccess ...${no_color}"
      echo -e "" >> ./htdocs/drupal-7.41/.htaccess
      echo -e "# Forces a redirect to SSL" >> ./htdocs/drupal-7.41/.htaccess
      echo -e "RewriteCond %{HTTPS} off" >> ./htdocs/drupal-7.41/.htaccess
      echo -e "RewriteCond %{HTTP:X-Forwarded-Proto} !https" >> ./htdocs/drupal-7.41/.htaccess
      echo -e "RewriteRule ^(.*)$ https://%{HTTP_HOST}%{REQUEST_URI} [L,R=301]" >> ./htdocs/drupal-7.41/.htaccess
      
      echo -e "" >> ./htdocs/drupal-7.41/.htaccess
      echo -e "# Reference: https://www.drupal.org/node/287115#comment-936650" >> ./htdocs/drupal-7.41/.htaccess
      echo -e "FileETag none" >> ./htdocs/drupal-7.41/.htaccess
      echo -e "# Enforces an Expires header for responses to content" >> ./htdocs/drupal-7.41/.htaccess
      echo -e "<ifmodule mod_expires.c>" >> ./htdocs/drupal-7.41/.htaccess
      echo -e "ExpiresActive On" >> ./htdocs/drupal-7.41/.htaccess
      echo -e "ExpiresDefault A0" >> ./htdocs/drupal-7.41/.htaccess
      echo -e "ExpiresByType application/x-javascript \"access plus 2 years\"" >> ./htdocs/drupal-7.41/.htaccess
      echo -e "ExpiresByType application/javascript \"access plus 2 years\"" >> ./htdocs/drupal-7.41/.htaccess
      echo -e "ExpiresByType text/javascript \"access plus 2 years\"" >> ./htdocs/drupal-7.41/.htaccess
      echo -e "ExpiresByType text/css \"access plus 2 years\"" >> ./htdocs/drupal-7.41/.htaccess
      
      echo -e "# Set up caching on media files for 1 year (forever?)" >> ./htdocs/drupal-7.41/.htaccess
      echo -e "<FilesMatch \"\.(flv|ico|pdf|avi|mov|ppt|doc|mp3|wmv|wav)$\">" >> ./htdocs/drupal-7.41/.htaccess
      echo -e "    ExpiresDefault A29030400" >> ./htdocs/drupal-7.41/.htaccess
      echo -e "</Filesmatch>" >> ./htdocs/drupal-7.41/.htaccess
      
      echo -e "# Set up caching on media files for 4 week" >> ./htdocs/drupal-7.41/.htaccess
      echo -e "<FilesMatch \"\.(gif|jpg|jpeg|png|swf)$\">" >> ./htdocs/drupal-7.41/.htaccess
      echo -e "    ExpiresDefault A2419200" >> ./htdocs/drupal-7.41/.htaccess
      echo -e "</Filesmatch>" >> ./htdocs/drupal-7.41/.htaccess
      
      echo -e "# Set up 2 week caching on commonly updated files" >> ./htdocs/drupal-7.41/.htaccess
      echo -e "<FilesMatch \"\.(xml|txt|html|js|css)$\">" >> ./htdocs/drupal-7.41/.htaccess
      echo -e "    ExpiresDefault A1209600" >> ./htdocs/drupal-7.41/.htaccess
      echo -e "</Filesmatch>" >> ./htdocs/drupal-7.41/.htaccess
      
      echo -e "# Set up 2 week caching on commonly updated files" >> ./htdocs/drupal-7.41/.htaccess
      echo -e "<FilesMatch \"^(j|cs)s_[0-9a-f]{32}_.+\.(j|cs)s(\.gz)?\">" >> ./htdocs/drupal-7.41/.htaccess
      echo -e "    ExpiresDefault A1209600" >> ./htdocs/drupal-7.41/.htaccess
      echo -e "</Filesmatch>" >> ./htdocs/drupal-7.41/.htaccess
      
      echo -e "# Force no caching for dynamic files" >> ./htdocs/drupal-7.41/.htaccess
      echo -e "<FilesMatch \"\.(php|cgi|pl|htm)$\">" >> ./htdocs/drupal-7.41/.htaccess
      echo -e "    ExpiresActive Off" >> ./htdocs/drupal-7.41/.htaccess
      echo -e "</Filesmatch>" >> ./htdocs/drupal-7.41/.htaccess
      echo -e "</ifmodule>" >> ./htdocs/drupal-7.41/.htaccess
      
      echo -e "# Sets up cache-control headers for responses to content" >> ./htdocs/drupal-7.41/.htaccess
      echo -e "<ifmodule mod_headers.c>" >> ./htdocs/drupal-7.41/.htaccess
      
      echo -e "# Set up caching on media files for 1 year (forever?)" >> ./htdocs/drupal-7.41/.htaccess
      echo -e "<FilesMatch \"\.(flv|ico|pdf|avi|mov|ppt|doc|mp3|wmv|wav)$\">" >> ./htdocs/drupal-7.41/.htaccess
      echo -e "    Header append Cache-Control \"public\"" >> ./htdocs/drupal-7.41/.htaccess
      echo -e "</Filesmatch>" >> ./htdocs/drupal-7.41/.htaccess
      
      echo -e "# Set up caching on media files for 4 week" >> ./htdocs/drupal-7.41/.htaccess
      echo -e "<FilesMatch \"\.(gif|jpg|jpeg|png|swf)$\">" >> ./htdocs/drupal-7.41/.htaccess
      echo -e "    Header append Cache-Control \"public\"" >> ./htdocs/drupal-7.41/.htaccess
      echo -e "</Filesmatch>" >> ./htdocs/drupal-7.41/.htaccess
      
      echo -e "# Set up 2 week caching on commonly updated files" >> ./htdocs/drupal-7.41/.htaccess
      echo -e "<FilesMatch \"\.(xml|txt|html|js|css)$\">" >> ./htdocs/drupal-7.41/.htaccess
      echo -e "    Header append Cache-Control \"proxy-revalidate\"" >> ./htdocs/drupal-7.41/.htaccess
      echo -e "</Filesmatch>" >> ./htdocs/drupal-7.41/.htaccess
      
      echo -e "# Force no caching for dynamic files" >> ./htdocs/drupal-7.41/.htaccess
      echo -e "<FilesMatch \"\.(php|cgi|pl|htm)$\">" >> ./htdocs/drupal-7.41/.htaccess
      echo -e "    Header set Cache-Control \"private, no-cache, no-store, proxy-revalidate, no-transform\"" >> ./htdocs/drupal-7.41/.htaccess
      echo -e "    Header set Pragma \"no-cache\"" >> ./htdocs/drupal-7.41/.htaccess
      echo -e "</Filesmatch>" >> ./htdocs/drupal-7.41/.htaccess
      echo -e "</ifmodule>" >> ./htdocs/drupal-7.41/.htaccess
      
      echo -e "# Lets setup some compression for more speed" >> ./htdocs/drupal-7.41/.htaccess
      echo -e "<ifModule mod_deflate.c>" >> ./htdocs/drupal-7.41/.htaccess
      echo -e "  <FilesMatch \"\.(js|css)$\">" >> ./htdocs/drupal-7.41/.htaccess
      echo -e "    SetOutputFilter DEFLATE" >> ./htdocs/drupal-7.41/.htaccess
      echo -e "  </FilesMatch>" >> ./htdocs/drupal-7.41/.htaccess
      echo -e "</ifModule>" >> ./htdocs/drupal-7.41/.htaccess
      
      # Embed config file if provided
      if [ -f "./bluezone/configtweaks/settings.php" ]; then
         echo -e "${tools}${Cyan}    Drupal Config file detected ...${no_color}"
         mv ./bluezone/configtweaks/settings.php ./htdocs/drupal-7.41/sites/default
      else
         echo -e "${tools}${Cyan}    NO Drupal Config file detected, using default ...${no_color}"
         cp ./htdocs/drupal-7.41/sites/default/default.settings.php ./htdocs/drupal-7.41/sites/default/settings.php
         echo -e "\$application = getenv(\"VCAP_APPLICATION\");" >> ./htdocs/drupal-7.41/sites/default/settings.php
         echo -e "\$application_json = json_decode(\$application,true);" >> ./htdocs/drupal-7.41/sites/default/settings.php
         echo -e "if (isset(\$application_json[\"application_uris\"])) {" >> ./htdocs/drupal-7.41/sites/default/settings.php
         echo -e "  \$base_url = \"https://\" . \$application_json[\"application_uris\"][0];" >> ./htdocs/drupal-7.41/sites/default/settings.php
         echo -e "}" >> ./htdocs/drupal-7.41/sites/default/settings.php
         echo -e "\$services = getenv(\"VCAP_SERVICES\");" >> ./htdocs/drupal-7.41/sites/default/settings.php
         echo -e "\$services_json = json_decode(\$services,true);" >> ./htdocs/drupal-7.41/sites/default/settings.php
         echo -e "if (isset(\$services_json)) {" >> ./htdocs/drupal-7.41/sites/default/settings.php
         echo -e "  if (isset(\$services_json[\"user-provided\"])) {" >> ./htdocs/drupal-7.41/sites/default/settings.php
         echo -e "    foreach(\$services_json[\"user-provided\"] as \$item) {" >> ./htdocs/drupal-7.41/sites/default/settings.php
         echo -e "      if (\$item[\"name\"] == \"drupaldb\") {" >> ./htdocs/drupal-7.41/sites/default/settings.php
         echo -e "         \$postgres_config = \$item[\"credentials\"];" >> ./htdocs/drupal-7.41/sites/default/settings.php
         echo -e "         list(\$hostname, \$port) = explode(':', \$postgres_config[\"public_hostname\"]);" >> ./htdocs/drupal-7.41/sites/default/settings.php
         echo -e "         \$dbname = 'compose';" >> ./htdocs/drupal-7.41/sites/default/settings.php
         echo -e "      } elseif (\$item[\"name\"] == \"drupalredis\") {" >> ./htdocs/drupal-7.41/sites/default/settings.php
         echo -e "         \$redis_config = \$item[\"credentials\"];" >> ./htdocs/drupal-7.41/sites/default/settings.php
         echo -e "         list(\$rhostname, \$rport) = explode(':', \$redis_config[\"public_hostname\"]);" >> ./htdocs/drupal-7.41/sites/default/settings.php
         # Useful only if Redis Caching is desired
         # Reference: http://dropbucket.org/node/242
         # Reference: https://redislabs.com/drupal-redis
         echo -e "         // Setup Redis Cache for Drupal if service is available" >> ./htdocs/drupal-7.41/sites/default/settings.php
         echo -e "         define('PREDIS_BASE_PATH', DRUPAL_ROOT . '/sites/all/libraries/predis-1.0.3/');" >> ./htdocs/drupal-7.41/sites/default/settings.php
         echo -e "         \$conf['redis_client_interface'] = 'Predis';" >> ./htdocs/drupal-7.41/sites/default/settings.php
         echo -e "         \$conf['redis_client_host'] = \$rhostname;" >> ./htdocs/drupal-7.41/sites/default/settings.php
         echo -e "         \$conf['redis_client_port'] = \$rport;" >> ./htdocs/drupal-7.41/sites/default/settings.php
         echo -e "         \$conf['redis_client_password'] = \$redis_config[\"password\"];" >> ./htdocs/drupal-7.41/sites/default/settings.php
         echo -e "         \$conf['lock_inc'] = 'sites/all/modules/contrib/redis/redis.lock.inc';" >> ./htdocs/drupal-7.41/sites/default/settings.php
         echo -e "         \$conf['cache_backends'][] = 'sites/all/modules/contrib/redis/redis.autoload.inc';" >> ./htdocs/drupal-7.41/sites/default/settings.php
         echo -e "         \$conf['cache_default_class'] = 'Redis_Cache';" >> ./htdocs/drupal-7.41/sites/default/settings.php 
         echo -e "      } elseif (\$item[\"name\"] == \"sendsms\") {" >> ./htdocs/drupal-7.41/sites/default/settings.php
         echo -e "         \$twilio_config = \$item[\"credentials\"];" >> ./htdocs/drupal-7.41/sites/default/settings.php
         echo -e "         \$conf['twiliophp_account_sid'] = \$twilio_config[\"accountSID\"];" >> ./htdocs/drupal-7.41/sites/default/settings.php
         echo -e "         \$conf['twiliophp_auth_token'] = \$twilio_config[\"authToken\"];" >> ./htdocs/drupal-7.41/sites/default/settings.php
         echo -e "      }" >> ./htdocs/drupal-7.41/sites/default/settings.php
         echo -e "    }" >> ./htdocs/drupal-7.41/sites/default/settings.php
         echo -e "  }" >> ./htdocs/drupal-7.41/sites/default/settings.php
         echo -e "  if (isset(\$services_json[\"sendgrid\"])) {" >> ./htdocs/drupal-7.41/sites/default/settings.php
         echo -e "    \$sendgrid_config = \$services_json[\"sendgrid\"][0][\"credentials\"];" >> ./htdocs/drupal-7.41/sites/default/settings.php
         echo -e "    # Useful for Sendgrid SMTP Support" >> ./htdocs/drupal-7.41/sites/default/settings.php
         echo -e "    \$conf['mail_system']['default-system'] = 'SmtpMailSystem';" >> ./htdocs/drupal-7.41/sites/default/settings.php
         echo -e "    \$conf['smtp_on'] = TRUE;" >> ./htdocs/drupal-7.41/sites/default/settings.php
         echo -e "    \$conf['smtp_host'] = \$sendgrid_config[\"hostname\"];" >> ./htdocs/drupal-7.41/sites/default/settings.php
         echo -e "    \$conf['smtp_port'] = 587;" >> ./htdocs/drupal-7.41/sites/default/settings.php
         echo -e "    \$conf['smtp_username'] = \$sendgrid_config[\"username\"];" >> ./htdocs/drupal-7.41/sites/default/settings.php
         echo -e "    \$conf['smtp_password'] = \$sendgrid_config[\"password\"];" >> ./htdocs/drupal-7.41/sites/default/settings.php
         echo -e "    \$conf['smtp_from'] = 'unmonitored-app-message-do-not-reply@myapp.mybluemix.net';" >> ./htdocs/drupal-7.41/sites/default/settings.php
         echo -e "    \$conf['smtp_fromname'] = 'Bluemix Drupal Deploy';" >> ./htdocs/drupal-7.41/sites/default/settings.php
         echo -e "  }" >> ./htdocs/drupal-7.41/sites/default/settings.php
         echo -e "}" >> ./htdocs/drupal-7.41/sites/default/settings.php
         echo -e "\$databases = array (" >> ./htdocs/drupal-7.41/sites/default/settings.php
         echo -e "  'default' =>" >> ./htdocs/drupal-7.41/sites/default/settings.php
         echo -e "  array (" >> ./htdocs/drupal-7.41/sites/default/settings.php
         echo -e "    'default' =>" >> ./htdocs/drupal-7.41/sites/default/settings.php
         echo -e "    array (" >> ./htdocs/drupal-7.41/sites/default/settings.php
         echo -e "      'driver' => 'pgsql'," >> ./htdocs/drupal-7.41/sites/default/settings.php
         echo -e "      'database' => \$dbname," >> ./htdocs/drupal-7.41/sites/default/settings.php
         echo -e "      'username' => \$postgres_config[\"username\"]," >> ./htdocs/drupal-7.41/sites/default/settings.php
         echo -e "      'password' => \$postgres_config[\"password\"]," >> ./htdocs/drupal-7.41/sites/default/settings.php
         echo -e "      'host' => \$hostname," >> ./htdocs/drupal-7.41/sites/default/settings.php
         echo -e "      'port' => \$port," >> ./htdocs/drupal-7.41/sites/default/settings.php
         echo -e "      'prefix' => 'main_'" >> ./htdocs/drupal-7.41/sites/default/settings.php
         echo -e "    )" >> ./htdocs/drupal-7.41/sites/default/settings.php
         echo -e "  )" >> ./htdocs/drupal-7.41/sites/default/settings.php
         echo -e ");" >> ./htdocs/drupal-7.41/sites/default/settings.php
         echo -e "" >> ./htdocs/drupal-7.41/sites/default/settings.php
         echo -e "//Tell Drupal it is behind a proxy" >> ./htdocs/drupal-7.41/sites/default/settings.php
         echo -e "\$conf['reverse_proxy'] = TRUE;" >> ./htdocs/drupal-7.41/sites/default/settings.php
         echo -e "\$conf['cache_backends'][] = 'includes/cache-install.inc';" >> ./htdocs/drupal-7.41/sites/default/settings.php
         echo -e "\$conf['cache_class_external_varnish_page'] = 'VarnishCache';" >> ./htdocs/drupal-7.41/sites/default/settings.php
         echo -e "\$conf['cache_class_cache_page'] = 'DrupalFakeCache';" >> ./htdocs/drupal-7.41/sites/default/settings.php
         echo -e "\$conf['cache_backends'][] = 'sites/all/modules/contrib/varnish/varnish.cache.inc';" >> ./htdocs/drupal-7.41/sites/default/settings.php
         echo -e "// Tell Drupal what addresses the proxy server(s) use." >> ./htdocs/drupal-7.41/sites/default/settings.php
         echo -e "\$conf['reverse_proxy_addresses'] = array('127.0.0.1');" >> ./htdocs/drupal-7.41/sites/default/settings.php
         echo -e "\$conf['page_cache_invoke_hooks'] = FALSE;" >> ./htdocs/drupal-7.41/sites/default/settings.php
         echo -e "\$conf['cache'] = 1;" >> ./htdocs/drupal-7.41/sites/default/settings.php
         echo -e "\$conf['cache_lifetime'] = 0;" >> ./htdocs/drupal-7.41/sites/default/settings.php
         echo -e "\$conf['page_cache_maximum_age'] = 600;" >> ./htdocs/drupal-7.41/sites/default/settings.php
         echo -e "\$conf['cache_class_cache_form'] = 'DrupalDatabaseCache';" >> ./htdocs/drupal-7.41/sites/default/settings.php
         echo -e "\$conf['omit_vary_cookie'] = TRUE;" >> ./htdocs/drupal-7.41/sites/default/settings.php
         echo -e "drupal_fast_404();" >> ./htdocs/drupal-7.41/sites/default/settings.php
         echo -e "\$conf['drupal_http_request_fails'] = FALSE;" >> ./htdocs/drupal-7.41/sites/default/settings.php
         echo -e "\$conf['allow_authorize_operations'] = FALSE;" >> ./htdocs/drupal-7.41/sites/default/settings.php
         echo -e "// Useful for CloudFlare Spam Control" >> ./htdocs/drupal-7.41/sites/default/settings.php
         echo -e "if (isset(\$_SERVER['HTTP_CF_CONNECTING_IP'])) {" >> ./htdocs/drupal-7.41/sites/default/settings.php
         echo -e "  \$_SERVER['REMOTE_ADDR'] = \$_SERVER['HTTP_CF_CONNECTING_IP'];" >> ./htdocs/drupal-7.41/sites/default/settings.php
         echo -e "}" >> ./htdocs/drupal-7.41/sites/default/settings.php
      fi
      
      # Cleaning up
      echo -e "${litter}${Yellow}    Cleaning up repository...${no_color}"
      rm -rf ./bluezone
      rm -rf .bluemix
      
      # Generate Config Fetcher Script
      IFS='|' read -ra PROJECT_NAME <<< "$IDS_PROJECT_NAME"
      echo -e "${tools}${Yellow}    Generating config helper download script...${no_color}"
      echo -e "#!/bin/bash" > fetchConfig.sh
      echo -e "rm ./bluezone/configtweaks/settings.php" >> fetchConfig.sh
      echo -e "cf files${PROJECT_NAME[1]} /app/htdocs/drupal-7.41/sites/default/settings.php > ./bluezone/configtweaks/settings.php" >> fetchConfig.sh
      echo -e "sed -i -e '1,3d' ./bluezone/configtweaks/settings.php" >> fetchConfig.sh
      chmod +x fetchConfig.sh
      echo -e "${present} ${beers}${Green}  Way to go! Your Drupal Assembly present is ready!"
- name: SameDayDelivery
  inputs:
  - type: job
    stage: SelfAssembly
    job: WrapPresent
  triggers:
  - type: stage
  properties:
  - name: SSHFS_FIRSTSETUP
    value: 'false'
    type: text
  jobs:
  - name: OpenPresent
    type: deployer
    target:
      url: ${CF_TARGET_URL}
      organization: ${CF_ORGANIZATION}
      space: ${CF_SPACE}
      application: ${CF_APP}
    script: |
      #!/bin/bash
      # Â© Copyright IBM Corporation 2015.
      #
      # All rights reserved. This program and the accompanying materials
      # are made available under the terms of the Eclipse Public License v1.0
      # which accompanies this distribution, and is available at
      # http://www.eclipse.org/legal/epl-v10.html
      # For some reason, the deploy stage shell has tracing turned on.  Lets turn it off
      set +x
      ##########
      # Colors - Lets have some fun ##
      ##########
      Green='\e[0;32m'
      Red='\e[0;31m'
      Yellow='\e[0;33m'
      Cyan='\e[0;36m'
      no_color='\e[0m' # No Color
      beer='\xF0\x9f\x8d\xba'
      delivery='\xF0\x9F\x9A\x9A'
      beers='\xF0\x9F\x8D\xBB'
      eyes='\xF0\x9F\x91\x80'
      cloud='\xE2\x98\x81'
      litter='\xF0\x9F\x9A\xAE'
      fail='\xE2\x9B\x94'
      harpoons='\xE2\x87\x8C'
      tools='\xE2\x9A\x92'
      present='\xF0\x9F\x8E\x81'
      #############
      # http://serverfault.com/questions/7503/how-to-determine-if-a-bash-variable-is-empty#answer-382740
      
      export SSHFS_FIRSTSETUP=yes
      
      if [ -n $(echo ${CF_TARGET_URL} | grep ng.bluemix.net) ]; then
        echo -e "${tools}${Cyan}  Detected Region: US South${no_color}"
        export CF_REGION=US
      elif [ -n $(echo ${CF_TARGET_URL} | grep eu-gb.bluemix.net) ]; then
        echo -e "${tools}${Cyan}  Detected Region: United Kingdom${no_color}"
        export CF_REGION=UK
      elif [ -n $(echo ${CF_TARGET_URL} | grep au-syd.bluemix.net) ]; then
        echo -e "${tools}${Cyan}  Detected Region: Sydney${no_color}"
        export CF_REGION=AU
      fi
      
      if [ -z $(cf s|grep drupaldb|cut -d" " -f1-1) ]; then
        echo -e "${fail}${Red}  PostGresql Service Instance [${Yellow}drupaldb${Red}] was not found${no_color}"
        return 1
      fi
      
      if [ -z $(cf s|grep drupalredis|cut -d" " -f1-1) ]; then
        echo -e "${fail}${Red}  Redis Service Instance [${Yellow}drupalredis${Red}] was not found${no_color}"
        echo -e "${tools}${Red}  Removing Redis service reference from manifest.yml${no_color}"
        sed -e "/drupalredis/ {d;}" ./manifest.yml > manifest.new
        rm manifest.yml
        mv manifest.new manifest.yml
      fi
      
      if [ -z $(cf s|grep sendsms|cut -d" " -f1-1) ]; then
        echo -e "${fail}${Red}  Twilio Service Instance [${Yellow}sendsms${Red}] was not found${no_color}"
        echo -e "${tools}${Red}  Removing Twilio service reference from manifest.yml${no_color}"
        sed -e "/sendsms/ {d;}" ./manifest.yml > manifest.new
        rm manifest.yml
        mv manifest.new manifest.yml
      fi
      
      echo -e "${tools}${Yellow}  Sendgrid detection routine ...${no_color}" > /dev/null 2>&1
      if [ -n $(cf s|grep sendgrid|cut -d" " -f1-1) ] && [ $(cf s|grep sendgrid|cut -d" " -f1-1) != "sendmail" ]; then
        echo -e "${eyes}${Yellow}   Detected existing sendgrid service ${existingSendgrid} within target space${no_color}"
        echo -e "${tools}${Yellow}    Updating manifest.yml file to match target space sendgrid service${no_color}"
        sed -e "s/sendmail/$(cf s|grep sendgrid|cut -d" " -f1-1)/g" ./manifest.yml > manifest.new
        rm manifest.yml
        mv manifest.new manifest.yml
      else
        if [ ${CF_REGION} == "US" ]; then
          if [ -z $(cf s|grep sendgrid|cut -d" " -f1-1) ]; then
            echo -e "${tools}${Yellow}    Pre-creating Sendgrid Service named [${Cyan}sendmail${Yellow}]${no_color}"
            t=0
            until [ $t -ge 5 ]
            do
              cf cs sendgrid free sendmail > /dev/null 2>&1 && break
              t=$[$t+1]
              sleep 15
            done
          else
            echo -e "${tools}${Yellow}    Existing Sendgrid Service named [${Cyan}sendmail${Yellow}] detected.${no_color}"
          fi
        else
          echo -e "${tools}${Yellow}    Sendgrid service not available in this region${no_color}"
          echo -e "${tools}${Red}  Removing Sendgrid service reference from manifest.yml${no_color}"
          sed -e "/sendmail/ {d;}" ./manifest.yml > manifest.new
          rm manifest.yml
          mv manifest.new manifest.yml
        fi
      fi
      
      p=0
      until [ $p -ge 2 ]
      do
         if [ ${SSHFS_FIRSTSETUP} == "yes" ]; then
           # WORKAROUND
           # This is required because of Cloud Foundry's hardcoded max of 180s for the Health Check timeout value
           # The health check is disabled for no-route deploys
           # The first time that SSHFS is setup for your drupal deploy, copying of the files is performed using
           # tar over ssh for optimal speed within the .profile.d fusemount script.  Unfortunately, because of the
           # number of pre-included modules and themes - this transfer can exceed 180s.  To make this easier,
           # we'll create a flag within the manifest.yml to signify user intention and make this process easier.
           cf push "${CF_APP}" -t 180 --no-route && echo -e "${beer} ${beers}${Green}  Congrats! Your secure Drupal deploy is now using a SSHFS mount for site config!  Remember to toggle the env var SSHFS_FIRSTSETUP at the top of this script to enable routes and redeploy.${no_color}" && echo -e "${beer} ${beers}${Green}  finis coronat opus${no_color}" && break
         else
           cf push "${CF_APP}" -t 180 && echo -e "${beer} ${beers}${Green}  Congrats! Your secure Drupal deploy is up and running!${no_color}" && echo -e "${beer} ${beers}${Green}  finis coronat opus${no_color}" && break
         fi
         p=$[$p+1]
         sleep 10
      done
      # view logs
      #cf logs "${CF_APP}" --recent
